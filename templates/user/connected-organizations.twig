{# @var connectedServiceProviderBag \SimpleSAML\Module\profilepage\Entities\ConnectedService\Bag #}
{# @var connectedServiceProvider \SimpleSAML\Module\profilepage\Entities\ConnectedService #}
{# @var accessTokensByClient array #}
{# @var refreshTokensByClient array #}
{# @var columnNames array #}

{% extends "@profilepage/base.twig" %}

{% set pagetitle = 'Connected Organizations'|trans %}

{% set pageMenuItem = 'connected-organizations' %}

{% block content %}
    {% if actionButtonsEnabled %}
        {% include "@profilepage/user/includes/_action-buttons.twig" %}
    {% endif %}
    <table>
        <!-- fixed table header -->
        <tr>
            <th><strong>{{ columnNames.name|trans }}</strong></th>
            <th><strong>{{ columnNames.numberOfAccess|trans }}</strong></th>
            <th><strong>{{ columnNames.lastAccess|trans }}</strong></th>
        </tr>

        {% for connectedServiceProvider in connectedServiceProviderBag.getAll %}
            <tr id="connected-service-provider-{{ loop.index }}">
                <td>
                    <img src="{{ connectedServiceProvider.serviceProvider.logoUrl ?? asset('css/src/icons/no-image.svg', 'profilepage') }}"
                         width="30"
                         height="30"
                         loading="lazy"
                         alt="Service Logo"/>
                    {{ connectedServiceProvider.getServiceProvider.getName|default(connectedServiceProvider.getServiceProvider.getEntityId)|e }}
                </td>
                <td><span class="value">{{ connectedServiceProvider.getNumberOfAuthentications|e }}</span></td>
                <td><span class="value">{{ connectedServiceProvider.getLastAuthenticationAt|date() }}</span></td>
            </tr>
            <tr>
                <td class="dropdown-container" colspan="3">
                    <input type="checkbox" id="dropdown-toggle-{{ loop.index }}" class="dropdown-toggle">
                    <label class="dropdown-label" for="dropdown-toggle-{{ loop.index }}">
                        <img src="{{ asset('css/src/icons/dropdown.svg', 'profilepage') }}" alt="Dropdown icon">
                    </label>
                    <div class="dropdown-box" >
                        <strong>{{ columnNames.serviceDetails|trans }}</strong>
                        <ul>
                            <li>
                                {{  columnNames.entityId|trans }}:
                                <span class="value">{{ connectedServiceProvider.getServiceProvider.getEntityId|e }}</span>
                            </li>
                            <li>
                                {{  columnNames.description|trans }}:
                                <span class="value">{{ connectedServiceProvider.getServiceProvider.getDescription|e|default(' / ') }}</span>
                            </li>
                        </ul>

                        <strong>{{  columnNames.loginDetails|trans }}</strong>
                        <ul>
                            <li>
                                {{ columnNames.firstAccess|trans }}:
                                <span class="value">{{ connectedServiceProvider.getFirstAuthenticationAt|date() }}</span>
                            </li>
                            <li>
                                {{ columnNames.lastAccess|trans }}:
                                <span class="value">{{ connectedServiceProvider.getLastAuthenticationAt|date() }}</span>
                            </li>
                        </ul>

                        {% if connectedServiceProvider.serviceProvider.protocol.designation is same as oidcProtocolDesignation %}
                            {% if accessTokensByClient is not empty and attribute(accessTokensByClient, connectedServiceProvider.serviceProvider.entityId) %}
                                <strong>{{ columnNames.accessTokens|trans }}</strong>
                                <table>
                                    {% for accessToken in attribute(accessTokensByClient, connectedServiceProvider.serviceProvider.entityId) %}
                                        <tr>
                                            <td>
                                                <span class="value">{{ accessToken.id }}</span><br>
                                                {{ columnNames.expiresAt|trans }}:
                                                <span class="value">{{ accessToken.expires_at|date }}</span>
                                            </td>
                                            <td>
                                                <form class="token-revoke-form" action="oidc-tokens/revoke-xhr">
                                                    <input type="hidden" name="token-type" value="access">
                                                    <input type="hidden" name="token-id" value="{{ accessToken.id }}">
                                                    <input type="submit" value="Revoke">
                                                </form>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </table>
                            {% endif %}

                            {% if refreshTokensByClient is not empty and attribute(refreshTokensByClient, connectedServiceProvider.serviceProvider.entityId) %}
                                <br>
                                <strong>{{ columnNames.refreshTokens|trans }}</strong>
                                <table>
                                    {% for refreshToken in attribute(refreshTokensByClient, connectedServiceProvider.serviceProvider.entityId) %}
                                        <tr>
                                            <td>
                                                <span class="value">{{ refreshToken.id }}</span><br>
                                                {{ columnNames.expiresAt|trans }}:
                                                <span class="value">{{ refreshToken.expires_at|date }}</span>
                                            </td>
                                            <td>
                                                <form class="token-revoke-form" action="oidc-tokens/revoke-xhr">
                                                    <input type="hidden" name="token-type" value="refresh">
                                                    <input type="hidden" name="token-id" value="{{ refreshToken.id }}">
                                                    <input type="submit" value="Revoke">
                                                </form>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </table>
                            {% endif %}
                        {% endif %}
                    </div>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="3">{{ 'No data available'|trans }}</td>
            </tr>
        {% endfor %}
        <!-- end of repeating item -->
    </table>
{% endblock %}

{% block tail %}

    <script>
        (function () {
            document.querySelectorAll('.token-revoke-form').forEach(
                element => element.addEventListener('submit', revokeToken)
            );

            function revokeToken(event) {
                event.preventDefault();

                const form = event.target;
                const submitButton = event.submitter;
                const formData = new FormData(form);

                if (! confirm('{{ 'Are you sure?'|trans }}')) {
                    return;
                }

                submitButton.disabled = true;

                const request = new XMLHttpRequest();

                request.open('POST', form.action);

                request.onload = function () {
                    if (this.status === 200) {
                        profilepage.removeElement(form.closest('tr'));
                    } else {
                        const response = JSON.parse(this.responseText);
                        console.log(response);
                        profilepage.alert('{{ 'Oups, there was an error while trying to revoke token.'|trans }}');
                    }
                };

                request.send(formData);
            }
        })();
    </script>

{% endblock %}